# -*- mode: shell-script -*-
#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

################################################################################
# OS X pre-customization

if [[ "$OSTYPE" == darwin* ]]; then
  # get colors with homebrew GNU ls
  alias dircolors='gdircolors'
fi

# set help if we're using the system-wide homebrew version of zsh
if [[ $( which zsh ) == /usr/local/bin/zsh ]]; then
  unalias run-help
  autoload run-help
  HELPDIR=/usr/local/share/zsh/help
fi

# set help if we're using the per-user linuxbrew version of zsh
if [[ $( which zsh ) == "$HOME/.linuxbrew/bin/zsh" ]]; then
  [[ -n $(alias run-help) ]] && unalias run-help
  autoload run-help
  HELPDIR="$HOME/.linuxbrew/share/zsh/help"
fi

################################################################################
# Source Prezto.

if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

################################################################################
# Aliases

# if mvim/vim is available, alias it to vi and vim
if (( $+commands[mvim] )); then
  alias vi='mvim -v -Nnu NONE'
  alias vim='mvim -v'
elif (( $+commands[vim] )); then
  alias vi='vim -Nnu NONE'
fi

alias ec='emacsclient -ca ""'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias crontab='EDITOR=vi crontab'

alias iperl='rlwrap -A -S "iperl> " perl -MData::Printer -wnE '\''BEGIN { say "# Use `p @<arrayOrList>` or `p %<hashTable>` to print arrays/lists/hashtables; e.g.: `p %ENV`"; } say eval()//$@'\'

alias nixwitch="sudo nixos-rebuild switch -I nixpkgs=$HOME/src/nixpkgs"

alias nice="nice -n19 ionice -c3"

alias mysql="nocorrect mysql --pager=less"

alias ll="ls -lrthF"
alias la="ls -AlrthF"

################################################################################
# Functions

function tth {
  # use a fancy tmux modeline (breaks iTerm2 integration in cch())
  ssh -t $@ "tmux new -AD -s default"
}

function eeh {
  ssh -t $@ "emacsclient -t -a ''"
}

function cch {
  # if no session is running, attach falls back to any sessions defined in
  # ~/.tmux.conf (a line with `new` suffices)
  ssh -t $@ "tmux -CC new -AD -s default"
}

function trash {
  trash="$HOME/.trash/"
  mkdir "$trash"
  if [[ "$OSTYPE" == darwin* ]]; then
    mv $@ "$trash"
  else
    mv -t "$trash" $@
  fi
}

function bat {
  typeset -A opts
  # delimiter character
  opts[-d]='	'
  # less scroll width
  opts[-s]=3
  zparseopts -D -E -K -A opts d: s:
  cat $1 - |
    column -ts"$opts[-d]" $1 |
    less -NS -\#$opts[-s]
}

function sdiff {
  if [[ $# -ne 2 ]]; then
    echo >&2 "Usage: sdiff file1 file2"
    return 1
  fi
  tmpdir=$(mktemp -d)
  file1=$tmpdir/$1
  file2=$tmpdir/$2
  setopt NO_MONITOR
  sort $1 -o $file1 &
  sort1=$!
  sort $2 -o $file2 &
  sort2=$!
  wait $sort1 $sort2
  setopt MONITOR
  diff $file1 $file2
}

function czech {
  setfont Lat2-Terminus16 -m 8859-2
  sudo loadkeys cz-qwerty
}

function english {
  setfont Lat2-Terminus16 -m 8859-2
  sudo loadkeys us
}

function o {
  if (( $# == 0 )); then
    open .
  else
    open $@
  fi
}

################################################################################
# Miscellaneous

# non-prezto zsh settings
zstyle ':completion:*' special-dirs true

# tmux window title with current dir, possibly hostname etc.
case "$TERM" in
  screen*)
    precmd () {
      local pwd="${PWD/#$HOME/~}"

      if [[ "$pwd" == (#m)[/~] ]]; then
        _tmux_pwd="$MATCH"
        unset MATCH
      else
        _tmux_pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
      fi

      # with hostname -- too verbose most of the time
      # print -Pn "\033k$(hostname -s): $_tmux_pwd\033\\"
      print -Pn "\033k$_tmux_pwd\033\\"
    }
    ;;
esac

# change to the actual home dir if necessary to get a shorter prompt
[[ $PWD == '/home/lukes' ]] && cd

[[ -e ${HOME}/.iterm2_shell_integration.zsh ]] && source ${HOME}/.iterm2_shell_integration.zsh
